Run # 1: 

graph:
[0] -> 6 -> 3 -> 2
[1] -> 5 -> 4
[2] -> 4 -> 0
[3] -> 6 -> 0
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 1
[6] -> 3 -> 0
found odd cycle! : 1, 4, 5, 1, 
contracting cycle...
[0] -> 6 -> 3 -> 2
[1] -> 5 -> 4
[2] -> 4 -> 0
[3] -> 6 -> 0
(4) -> [1] -> 5 -> 2 -> 1
(5) -> [1] -> 4 -> 1
[6] -> 3 -> 0
no path found through odd cycle, restarting...
graph:
[0]
[1]
[2] -> 6 -> 4 -> 3
[3] -> 6 -> 4 -> 2
[4] -> 3 -> 2
[5]
[6] -> 3 -> 2
found odd cycle! : 3, 2, 6, 3, 
contracting cycle...
[0]
[1]
(2) -> [3] -> 6 -> 4 -> 3
[3] -> 6 -> 4 -> 2
[4] -> 3 -> 2
[5]
(6) -> [3] -> 3 -> 2
no path found through odd cycle, restarting...
graph:
[0] -> 6 -> 5 -> 3 -> 2 -> 1
[1] -> 5 -> 3 -> 0
[2] -> 4 -> 0
[3] -> 6 -> 5 -> 4 -> 1 -> 0
[4] -> 3 -> 2
[5] -> 3 -> 1 -> 0
[6] -> 3 -> 0
found odd cycle! : 0, 5, 1, 0, 
contracting cycle...
[0] -> 6 -> 5 -> 3 -> 2 -> 1
(1) -> [0] -> 5 -> 3 -> 0
[2] -> 4 -> 0
[3] -> 6 -> 5 -> 4 -> 1 -> 0
[4] -> 3 -> 2
(5) -> [0] -> 3 -> 1 -> 0
[6] -> 3 -> 0
constructed path: 
[0] -> 3 -> 6
[1]
[2]
[3] -> 0
[4]
[5]
[6] -> 0
expanding 0 from 0 into -1
expanding 1 from 0 into -1
expanding 5 from 0 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6 -> 5 -> 3 -> 2 -> 1
[1] -> 5 -> 3 -> 0
[2] -> 4 -> 0
[3] -> 6 -> 5 -> 4 -> 1 -> 0
[4] -> 3 -> 2
[5] -> 3 -> 1 -> 0
[6] -> 3 -> 0
looking at neighborhood of 0 in G
	looking at edge 0 6 from edge 0x7ffe9d11cf70 (0'th edge of 0)...added edge
	looking at edge 0 5 from edge 0x7ffe9d11cf50 (1'th edge of 0)...added edge
	looking at edge 0 3 from edge 0x7ffe9d11cf30 (2'th edge of 0)...added edge
	looking at edge 0 3 from edge 0x7ffe9d11cf10 (3'th edge of 0)...added edge
	looking at edge 0 5 from edge 0x7ffe9d11cf00 (4'th edge of 0)...added edge
FINISHED PROCESSING 0, GRAPH:
[0] -> 6 -> 5 -> 5 -> 3 -> 3 -> 5 -> 6 -> 3 -> 6
[1] -> 5 -> 3 -> 5 -> 6 -> 3 -> 6
[2] -> 4 -> 3 -> 3 -> 5 -> 6 -> 3 -> 6
[3] -> 6 -> 5 -> 4 -> 1 -> 0
[4] -> 3 -> 2
[5] -> 3 -> 1 -> 0
[6] -> 3 -> 0
looking at neighborhood of 1 in G
	looking at edge 1 5 from edge 0x7ffe9d11cfb0 (0'th edge of 1)...added edge
	looking at edge 1 3 from edge 0x7ffe9d11cf90 (1'th edge of 1)...added edge
	looking at edge 1 5 from edge 0x7ffe9d11cf00 (2'th edge of 1)...added edge
	looking at edge 1 6 from edge 0x7ffe9d11cef0 (3'th edge of 1)...added edge
	looking at edge 1 3 from edge 0x7ffe9d11cee0 (4'th edge of 1)...added edge
FINISHED PROCESSING 1, GRAPH:
[0] -> 6 -> 5 -> 3 -> 5
[1] -> 5 -> 3 -> 5 -> 6 -> 3 -> 6
[2] -> 4 -> 3 -> 3 -> 5 -> 6 -> 3 -> 6
[3] -> 6 -> 5 -> 4 -> 1 -> 5
[4] -> 3 -> 2
[5] -> 3 -> 1 -> 5 -> 3 -> 5
[6] -> 3 -> 3 -> 6 -> 5 -> 3 -> 5
looking at neighborhood of 2 in G
	looking at edge 2 4 from edge 0x7ffe9d11cfd0 (0'th edge of 2)...added edge
	looking at edge 2 3 from edge 0x7ffe9d11cf20 (1'th edge of 2)...added edge
	looking at edge 2 3 from edge 0x7ffe9d11cf10 (2'th edge of 2)...added edge
	looking at edge 2 5 from edge 0x7ffe9d11cf00 (3'th edge of 2)...added edge
	looking at edge 2 6 from edge 0x7ffe9d11cef0 (4'th edge of 2)...added edge
FINISHED PROCESSING 2, GRAPH:
[0] -> 6 -> 5 -> 3 -> 5
[1] -> 3 -> 3 -> 4
[2] -> 6 -> 5 -> 3 -> 3 -> 4
[3] -> 6 -> 5 -> 4 -> 3 -> 4
[4] -> 3 -> 2
[5] -> 3 -> 5 -> 3 -> 3 -> 4
[6] -> 3 -> 3 -> 6 -> 5 -> 3 -> 5
looking at neighborhood of 3 in G
	looking at edge 3 6 from edge 0x7ffe9d11d030 (0'th edge of 3)...added edge
	looking at edge 3 5 from edge 0x7ffe9d11d010 (1'th edge of 3)...added edge
	looking at edge 3 5 from edge 0x7ffe9d11cff0 (2'th edge of 3)...added edge
	looking at edge 3 6 from edge 0x7ffe9d11cfe0 (3'th edge of 3)...added edge
	looking at edge 3 0 from edge 0x7ffe9d11ced0 (4'th edge of 3)...added edge
FINISHED PROCESSING 3, GRAPH:
[0] -> 6 -> 5 -> 3 -> 5
[1] -> 3 -> 3 -> 4
[2] -> 6 -> 5 -> 3 -> 3 -> 4
[3] -> 6 -> 6 -> 5 -> 5 -> 6 -> 0
[4] -> 5 -> 5 -> 6 -> 0
[5] -> 0 -> 6 -> 5 -> 5 -> 6 -> 0
[6] -> 3 -> 3 -> 6 -> 5 -> 3 -> 5
looking at neighborhood of 4 in G
	looking at edge 4 5 from edge 0x7ffe9d11d000 (0'th edge of 4)...added edge
	looking at edge 4 5 from edge 0x7ffe9d11cff0 (1'th edge of 4)...added edge
	looking at edge 4 6 from edge 0x7ffe9d11cfe0 (2'th edge of 4)...added edge
	lookRun # 2: 

graph:
[0] -> 6 -> 4
[1] -> 5
[2] -> 6
[3] -> 5
[4] -> 6 -> 0
[5] -> 3 -> 1
[6] -> 4 -> 2 -> 0
found odd cycle! : 0, 6, 4, 0, 
contracting cycle...
[0] -> 6 -> 4
[1] -> 5
[2] -> 6
[3] -> 5
(4) -> [0] -> 6 -> 0
[5] -> 3 -> 1
(6) -> [0] -> 4 -> 2 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 4 -> 3
[1]
[2]
[3] -> 4 -> 0
[4] -> 3 -> 0
[5] -> 6
[6] -> 5
found odd cycle! : 0, 4, 3, 0, 
contracting cycle...
[0] -> 4 -> 3
[1]
[2]
(3) -> [0] -> 4 -> 0
(4) -> [0] -> 3 -> 0
[5] -> 6
[6] -> 5
no path found through odd cycle, restarting...
graph:
[0] -> 2 -> 1
[1] -> 5 -> 0
[2] -> 0
[3] -> 6 -> 5 -> 4
[4] -> 5 -> 3
[5] -> 6 -> 4 -> 3 -> 1
[6] -> 5 -> 3
found odd cycle! : 3, 5, 6, 3, 
contracting cycle...
[0] -> 2 -> 1
[1] -> 5 -> 0
[2] -> 0
[3] -> 6 -> 5 -> 4
[4] -> 5 -> 3
(5) -> [3] -> 6 -> 4 -> 3 -> 1
(6) -> [3] -> 5 -> 3
constructed path: 
[0]
[1]
[2]
[3] -> 4
[4] -> 5 -> 3
[5] -> 4
[6]
expanding 3 from 3 into -1
expanding 5 from 3 into -1
expanding 6 from 3 into -1
FINISHED EXPANDING GRAPH:
[0] -> 2 -> 1
[1] -> 5 -> 0
[2] -> 0
[3] -> 6 -> 5 -> 4
[4] -> 5 -> 3
[5] -> 6 -> 4 -> 3 -> 1
[6] -> 5 -> 3
lifted path: 
[0]
[1]
[2]
[3] -> 4
[4] -> 5 -> 3
[5] -> 4
[6]
resulting graph:
[0] -> 2 -> 1
[1] -> 5 -> 0
[2] -> 0
[3] -> 6 -> 5 -> 4
[4] -> 5 -> 3
[5] -> 6 -> 4 -> 3 -> 1
[6] -> 5 -> 3
GRAPH STATE (SHOULD BE 0): 0
Run # 3: 

graph:
[0] -> 1
[1] -> 5 -> 4 -> 0
[2] -> 6
[3]
[4] -> 5 -> 1
[5] -> 4 -> 1
[6] -> 2
found odd cycle! : 4, 1, 5, 4, 
contracting cycle...
[0] -> 1
(1) -> [4] -> 5 -> 4 -> 0
[2] -> 6
[3]
[4] -> 5 -> 1
(5) -> [4] -> 4 -> 1
[6] -> 2
no path found through odd cycle, restarting...
graph:
[0] -> 6
[1] -> 4 -> 3 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 6 -> 4 -> 1
[4] -> 5 -> 3 -> 1
[5] -> 6 -> 4 -> 2
[6] -> 5 -> 3 -> 2 -> 0
found odd cycle! : 2, 6, 5, 2, 
contracting cycle...
[0] -> 6
[1] -> 4 -> 3 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 6 -> 4 -> 1
[4] -> 5 -> 3 -> 1
(5) -> [2] -> 6 -> 4 -> 2
(6) -> [2] -> 5 -> 3 -> 2 -> 0
constructed path: 
[0]
[1] -> 2
[2] -> 1
[3]
[4] -> 5
[5] -> 4
[6]
expanding 2 from 2 into -1
expanding 5 from 2 into -1
expanding 6 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6
[1] -> 4 -> 3 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 6 -> 4 -> 1
[4] -> 5 -> 3 -> 1
[5] -> 6 -> 4 -> 2
[6] -> 5 -> 3 -> 2 -> 0
lifted path: 
[0]
[1] -> 2
[2] -> 1
[3]
[4] -> 5
[5] -> 4
[6]
resulting graph:
[0] -> 6
[1] -> 4 -> 3 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 6 -> 4 -> 1
[4] -> 5 -> 3 -> 1
[5] -> 6 -> 4 -> 2
[6] -> 5 -> 3 -> 2 -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 4: 

Run # 5: 

Run # 6: 

graph:
[0] -> 4 -> 1
[1] -> 5 -> 0
[2] -> 6 -> 4
[3] -> 4
[4] -> 6 -> 3 -> 2 -> 0
[5] -> 1
[6] -> 4 -> 2
found odd cycle! : 2, 4, 6, 2, 
contracting cycle...
[0] -> 4 -> 1
[1] -> 5 -> 0
[2] -> 6 -> 4
[3] -> 4
(4) -> [2] -> 6 -> 3 -> 2 -> 0
[5] -> 1
(6) -> [2] -> 4 -> 2
constructed path: 
[0] -> 4
[1]
[2]
[3] -> 4
[4] -> 0 -> 3
[5]
[6]
expanding 2 from 2 into -1
expanding 4 from 2 into -1
expanding 6 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 4 -> 1
[1] -> 5 -> 0
[2] -> 6 -> 4
[3] -> 4
[4] -> 6 -> 3 -> 2 -> 0
[5] -> 1
[6] -> 4 -> 2
lifted path: 
[0] -> 4
[1]
[2]
[3] -> 4
[4] -> 0 -> 3
[5]
[6]
resulting graph:
[0] -> 4 -> 1
[1] -> 5 -> 0
[2] -> 6 -> 4
[3] -> 4
[4] -> 6 -> 3 -> 2 -> 0
[5] -> 1
[6] -> 4 -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 7: 

graph:
[0] -> 3
[1] -> 2
[2] -> 5 -> 3 -> 1
[3] -> 5 -> 2 -> 0
[4]
[5] -> 3 -> 2
[6]
found odd cycle! : 2, 3, 5, 2, 
contracting cycle...
[0] -> 3
[1] -> 2
[2] -> 5 -> 3 -> 1
(3) -> [2] -> 5 -> 2 -> 0
[4]
(5) -> [2] -> 3 -> 2
[6]
constructed path: 
[0] -> 3
[1] -> 2
[2] -> 1
[3] -> 0
[4]
[5]
[6]
expanding 2 from 2 into -1
expanding 3 from 2 into -1
expanding 5 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 3
[1] -> 2
[2] -> 5 -> 3 -> 1
[3] -> 5 -> 2 -> 0
[4]
[5] -> 3 -> 2
[6]
lifted path: 
[0] -> 3
[1] -> 2
[2] -> 1
[3] -> 0
[4]
[5]
[6]
resulting graph:
[0] -> 3
[1] -> 2
[2] -> 5 -> 3 -> 1
[3] -> 5 -> 2 -> 0
[4]
[5] -> 3 -> 2
[6]
GRAPH STATE (SHOULD BE 0): 0
Run # 8: 

graph:
[0] -> 6 -> 5
[1] -> 5 -> 3
[2]
[3] -> 4 -> 1
[4] -> 3
[5] -> 6 -> 1 -> 0
[6] -> 5 -> 0
found odd cycle! : 0, 6, 5, 0, 
contracting cycle...
[0] -> 6 -> 5
[1] -> 5 -> 3
[2]
[3] -> 4 -> 1
[4] -> 3
(5) -> [0] -> 6 -> 1 -> 0
(6) -> [0] -> 5 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 3 -> 2
[1] -> 6 -> 2
[2] -> 6 -> 1 -> 0
[3] -> 0
[4]
[5] -> 6
[6] -> 5 -> 2 -> 1
found odd cycle! : 1, 2, 6, 1, 
contracting cycle...
[0] -> 3 -> 2
[1] -> 6 -> 2
(2) -> [1] -> 6 -> 1 -> 0
[3] -> 0
[4]
[5] -> 6
(6) -> [1] -> 5 -> 2 -> 1
constructed path: 
[0] -> 2
[1]
[2] -> 0
[3]
[4]
[5] -> 6
[6] -> 5
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 3 -> 2
[1] -> 6 -> 2
[2] -> 6 -> 1 -> 0
[3] -> 0
[4]
[5] -> 6
[6] -> 5 -> 2 -> 1
lifted path: 
[0] -> 2
[1]
[2] -> 0
[3]
[4]
[5] -> 6
[6] -> 5
resulting graph:
[0] -> 3 -> 2
[1] -> 6 -> 2
[2] -> 6 -> 1 -> 0
[3] -> 0
[4]
[5] -> 6
[6] -> 5 -> 2 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 9: 

Run # 10: 

graph:
[0] -> 3 -> 2
[1] -> 3 -> 2
[2] -> 1 -> 0
[3] -> 6 -> 5 -> 1 -> 0
[4] -> 6
[5] -> 3
[6] -> 4 -> 3
found odd cycle! : 1, 0, 2, 1, 
contracting cycle...
(0) -> [1] -> 3 -> 2
[1] -> 3 -> 2
(2) -> [1] -> 1 -> 0
[3] -> 6 -> 5 -> 1 -> 0
[4] -> 6
[5] -> 3
[6] -> 4 -> 3
no path found through odd cycle, restarting...
graph:
[0] -> 6 -> 3 -> 2
[1] -> 6 -> 5
[2] -> 5 -> 0
[3] -> 0
[4]
[5] -> 6 -> 2 -> 1
[6] -> 5 -> 1 -> 0
found odd cycle! : 1, 6, 5, 1, 
contracting cycle...
[0] -> 6 -> 3 -> 2
[1] -> 6 -> 5
[2] -> 5 -> 0
[3] -> 0
[4]
(5) -> [1] -> 6 -> 2 -> 1
(6) -> [1] -> 5 -> 1 -> 0
constructed path: 
[0] -> 6
[1]
[2] -> 5
[3]
[4]
[5] -> 2
[6] -> 0
expanding 1 from 1 into -1
expanding 5 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6 -> 3 -> 2
[1] -> 6 -> 5
[2] -> 5 -> 0
[3] -> 0
[4]
[5] -> 6 -> 2 -> 1
[6] -> 5 -> 1 -> 0
lifted path: 
[0] -> 6
[1]
[2] -> 5
[3]
[4]
[5] -> 2
[6] -> 0
resulting graph:
[0] -> 6 -> 3 -> 2
[1] -> 6 -> 5
[2] -> 5 -> 0
[3] -> 0
[4]
[5] -> 6 -> 2 -> 1
[6] -> 5 -> 1 -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 11: 

graph:
[0]
[1]
[2]
[3] -> 5 -> 4
[4] -> 5 -> 3
[5] -> 6 -> 4 -> 3
[6] -> 5
found odd cycle! : 4, 3, 5, 4, 
contracting cycle...
[0]
[1]
[2]
(3) -> [4] -> 5 -> 4
[4] -> 5 -> 3
(5) -> [4] -> 6 -> 4 -> 3
[6] -> 5
no path found through odd cycle, restarting...
graph:
[0]
[1] -> 5 -> 2
[2] -> 5 -> 4 -> 3 -> 1
[3] -> 5 -> 4 -> 2
[4] -> 3 -> 2
[5] -> 3 -> 2 -> 1
[6]
found odd cycle! : 2, 1, 5, 2, 
contracting cycle...
[0]
(1) -> [2] -> 5 -> 2
[2] -> 5 -> 4 -> 3 -> 1
[3] -> 5 -> 4 -> 2
[4] -> 3 -> 2
(5) -> [2] -> 3 -> 2 -> 1
[6]
constructed path: 
[0]
[1]
[2] -> 3 -> 4
[3] -> 2
[4] -> 2
[5]
[6]
expanding 1 from 2 into -1
expanding 2 from 2 into -1
expanding 5 from 2 into -1
FINISHED EXPANDING GRAPH:
[0]
[1] -> 5 -> 2
[2] -> 5 -> 4 -> 3 -> 1
[3] -> 5 -> 4 -> 2
[4] -> 3 -> 2
[5] -> 3 -> 2 -> 1
[6]
lifted path: 
[0]
[1]
[2] -> 3 -> 4
[3] -> 2
[4] -> 2
[5]
[6]
resulting graph:
[0]
[1] -> 5 -> 2
[2] -> 5 -> 4 -> 3 -> 1
[3] -> 5 -> 4 -> 2
[4] -> 3 -> 2
[5] -> 3 -> 2 -> 1
[6]
GRAPH STATE (SHOULD BE 0): 0
Run # 12: 

graph:
[0]
[1] -> 6 -> 5
[2] -> 4
[3]
[4] -> 6 -> 2
[5] -> 6 -> 1
[6] -> 5 -> 4 -> 1
found odd cycle! : 5, 1, 6, 5, 
contracting cycle...
[0]
(1) -> [5] -> 6 -> 5
[2] -> 4
[3]
[4] -> 6 -> 2
[5] -> 6 -> 1
(6) -> [5] -> 5 -> 4 -> 1
no path found through odd cycle, restarting...
graph:
[0] -> 4 -> 1
[1] -> 4 -> 0
[2] -> 4
[3]
[4] -> 2 -> 1 -> 0
[5]
[6]
found odd cycle! : 0, 4, 1, 0, 
contracting cycle...
[0] -> 4 -> 1
(1) -> [0] -> 4 -> 0
[2] -> 4
[3]
(4) -> [0] -> 2 -> 1 -> 0
[5]
[6]
no path found through odd cycle, restarting...
graph:
[0] -> 6 -> 5 -> 1
[1] -> 0
[2]
[3] -> 6 -> 5
[4]
[5] -> 3 -> 0
[6] -> 3 -> 0
found odd cycle! : 3, 0, 5, 3, 
contracting cycle...
(0) -> [3] -> 6 -> 5 -> 1
[1] -> 0
[2]
[3] -> 6 -> 5
[4]
(5) -> [3] -> 3 -> 0
[6] -> 3 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 4
[1] -> 5 -> 4 -> 3 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 5 -> 1
[4] -> 5 -> 1 -> 0
[5] -> 4 -> 3 -> 2 -> 1
[6] -> 2
found odd cycle! : 1, 4, 5, 1, 
contracting cycle...
[0] -> 4
[1] -> 5 -> 4 -> 3 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 5 -> 1
(4) -> [1] -> 5 -> 1 -> 0
(5) -> [1] -> 4 -> 3 -> 2 -> 1
[6] -> 2
constructed path: 
[0]
[1] -> 2 -> 3
[2] -> 1
[3] -> 1
[4]
[5]
[6]
expanding 1 from 1 into -1
expanding 4 from 1 into -1
expanding 5 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 4
[1] -> 5 -> 4 -> 3 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 5 -> 1
[4] -> 5 -> 1 -> 0
[5] -> 4 -> 3 -> 2 -> 1
[6] -> 2
lifted path: 
[0]
[1] -> 2 -> 3
[2] -> 1
[3] -> 1
[4]
[5]
[6]
resulting graph:
[0] -> 4
[1] -> 5 -> 4 -> 3 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 5 -> 1
[4] -> 5 -> 1 -> 0
[5] -> 4 -> 3 -> 2 -> 1
[6] -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 13: 

Run # 14: 

Run # 15: 

Run # 16: 

Run # 17: 

graph:
[0] -> 5 -> 2
[1] -> 6 -> 3 -> 2
[2] -> 4 -> 1 -> 0
[3] -> 6 -> 1
[4] -> 2
[5] -> 0
[6] -> 3 -> 1
found odd cycle! : 3, 1, 6, 3, 
contracting cycle...
[0] -> 5 -> 2
(1) -> [3] -> 6 -> 3 -> 2
[2] -> 4 -> 1 -> 0
[3] -> 6 -> 1
[4] -> 2
[5] -> 0
(6) -> [3] -> 3 -> 1
no path found through odd cycle, restarting...
graph:
[0] -> 4 -> 1
[1] -> 4 -> 2 -> 0
[2] -> 1
[3] -> 5
[4] -> 1 -> 0
[5] -> 3
[6]
found odd cycle! : 0, 4, 1, 0, 
contracting cycle...
[0] -> 4 -> 1
(1) -> [0] -> 4 -> 2 -> 0
[2] -> 1
[3] -> 5
(4) -> [0] -> 1 -> 0
[5] -> 3
[6]
no path found through odd cycle, restarting...
graph:
[0] -> 4
[1] -> 6 -> 5 -> 2
[2] -> 5 -> 1
[3] -> 5 -> 4
[4] -> 5 -> 3 -> 0
[5] -> 6 -> 4 -> 3 -> 2 -> 1
[6] -> 5 -> 1
found odd cycle! : 1, 5, 6, 1, 
contracting cycle...
[0] -> 4
[1] -> 6 -> 5 -> 2
[2] -> 5 -> 1
[3] -> 5 -> 4
[4] -> 5 -> 3 -> 0
(5) -> [1] -> 6 -> 4 -> 3 -> 2 -> 1
(6) -> [1] -> 5 -> 1
constructed path: 
[0]
[1] -> 2
[2] -> 1
[3]
[4] -> 5
[5] -> 4
[6]
expanding 1 from 1 into -1
expanding 5 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 4
[1] -> 6 -> 5 -> 2
[2] -> 5 -> 1
[3] -> 5 -> 4
[4] -> 5 -> 3 -> 0
[5] -> 6 -> 4 -> 3 -> 2 -> 1
[6] -> 5 -> 1
lifted path: 
[0]
[1] -> 2
[2] -> 1
[3]
[4] -> 5
[5] -> 4
[6]
resulting graph:
[0] -> 4
[1] -> 6 -> 5 -> 2
[2] -> 5 -> 1
[3] -> 5 -> 4
[4] -> 5 -> 3 -> 0
[5] -> 6 -> 4 -> 3 -> 2 -> 1
[6] -> 5 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 18: 

Run # 19: 

graph:
[0]
[1] -> 4
[2] -> 5 -> 4
[3] -> 5
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 3 -> 2
[6]
found odd cycle! : 2, 4, 5, 2, 
contracting cycle...
[0]
[1] -> 4
[2] -> 5 -> 4
[3] -> 5
(4) -> [2] -> 5 -> 2 -> 1
(5) -> [2] -> 4 -> 3 -> 2
[6]
constructed path: 
[0]
[1] -> 4
[2]
[3] -> 5
[4] -> 1
[5] -> 3
[6]
expanding 2 from 2 into -1
expanding 4 from 2 into -1
expanding 5 from 2 into -1
FINISHED EXPANDING GRAPH:
[0]
[1] -> 4
[2] -> 5 -> 4
[3] -> 5
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 3 -> 2
[6]
lifted path: 
[0]
[1] -> 4
[2]
[3] -> 5
[4] -> 1
[5] -> 3
[6]
resulting graph:
[0]
[1] -> 4
[2] -> 5 -> 4
[3] -> 5
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 3 -> 2
[6]
GRAPH STATE (SHOULD BE 0): 0
Run # 20: 

graph:
[0] -> 6
[1] -> 5 -> 3
[2]
[3] -> 5 -> 1
[4] -> 5
[5] -> 6 -> 4 -> 3 -> 1
[6] -> 5 -> 0
found odd cycle! : 1, 5, 3, 1, 
contracting cycle...
[0] -> 6
[1] -> 5 -> 3
[2]
(3) -> [1] -> 5 -> 1
[4] -> 5
(5) -> [1] -> 6 -> 4 -> 3 -> 1
[6] -> 5 -> 0
constructed path: 
[0]
[1]
[2]
[3]
[4] -> 5
[5] -> 4 -> 6
[6] -> 5
expanding 1 from 1 into -1
expanding 3 from 1 into -1
expanding 5 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6
[1] -> 5 -> 3
[2]
[3] -> 5 -> 1
[4] -> 5
[5] -> 6 -> 4 -> 3 -> 1
[6] -> 5 -> 0
lifted path: 
[0]
[1]
[2]
[3]
[4] -> 5
[5] -> 4 -> 6
[6] -> 5
resulting graph:
[0] -> 6
[1] -> 5 -> 3
[2]
[3] -> 5 -> 1
[4] -> 5
[5] -> 6 -> 4 -> 3 -> 1
[6] -> 5 -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 21: 

Run # 22: 

Run # 23: 

Run # 24: 

Run # 25: 

Run # 26: 

graph:
[0]
[1] -> 5 -> 2
[2] -> 6 -> 4 -> 3 -> 1
[3] -> 6 -> 2
[4] -> 2
[5] -> 1
[6] -> 3 -> 2
found odd cycle! : 3, 2, 6, 3, 
contracting cycle...
[0]
[1] -> 5 -> 2
(2) -> [3] -> 6 -> 4 -> 3 -> 1
[3] -> 6 -> 2
[4] -> 2
[5] -> 1
(6) -> [3] -> 3 -> 2
no path found through odd cycle, restarting...
graph:
[0] -> 6
[1] -> 4 -> 3 -> 2
[2] -> 6 -> 3 -> 1
[3] -> 2 -> 1
[4] -> 1
[5]
[6] -> 2 -> 0
found odd cycle! : 1, 2, 3, 1, 
contracting cycle...
[0] -> 6
[1] -> 4 -> 3 -> 2
(2) -> [1] -> 6 -> 3 -> 1
(3) -> [1] -> 2 -> 1
[4] -> 1
[5]
[6] -> 2 -> 0
constructed path: 
[0]
[1] -> 4
[2] -> 6
[3]
[4] -> 1
[5]
[6] -> 2
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 3 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6
[1] -> 4 -> 3 -> 2
[2] -> 6 -> 3 -> 1
[3] -> 2 -> 1
[4] -> 1
[5]
[6] -> 2 -> 0
lifted path: 
[0]
[1] -> 4
[2] -> 6
[3]
[4] -> 1
[5]
[6] -> 2
resulting graph:
[0] -> 6
[1] -> 4 -> 3 -> 2
[2] -> 6 -> 3 -> 1
[3] -> 2 -> 1
[4] -> 1
[5]
[6] -> 2 -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 27: 

graph:
[0]
[1] -> 6 -> 4 -> 2
[2] -> 4 -> 1
[3]
[4] -> 2 -> 1
[5]
[6] -> 1
found odd cycle! : 2, 1, 4, 2, 
contracting cycle...
[0]
(1) -> [2] -> 6 -> 4 -> 2
[2] -> 4 -> 1
[3]
(4) -> [2] -> 2 -> 1
[5]
[6] -> 1
no path found through odd cycle, restarting...
graph:
[0] -> 6 -> 5
[1]
[2]
[3] -> 6
[4]
[5] -> 6 -> 0
[6] -> 5 -> 3 -> 0
found odd cycle! : 0, 6, 5, 0, 
contracting cycle...
[0] -> 6 -> 5
[1]
[2]
[3] -> 6
[4]
(5) -> [0] -> 6 -> 0
(6) -> [0] -> 5 -> 3 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 5
[1] -> 5 -> 4
[2] -> 5 -> 4
[3] -> 5
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 3 -> 2 -> 1 -> 0
[6]
found odd cycle! : 1, 5, 4, 1, 
contracting cycle...
[0] -> 5
[1] -> 5 -> 4
[2] -> 5 -> 4
[3] -> 5
(4) -> [1] -> 5 -> 2 -> 1
(5) -> [1] -> 4 -> 3 -> 2 -> 1 -> 0
[6]
constructed path: 
[0]
[1]
[2] -> 4
[3] -> 5
[4] -> 2
[5] -> 3
[6]
expanding 1 from 1 into -1
expanding 4 from 1 into -1
expanding 5 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5
[1] -> 5 -> 4
[2] -> 5 -> 4
[3] -> 5
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 3 -> 2 -> 1 -> 0
[6]
lifted path: 
[0]
[1]
[2] -> 4
[3] -> 5
[4] -> 2
[5] -> 3
[6]
resulting graph:
[0] -> 5
[1] -> 5 -> 4
[2] -> 5 -> 4
[3] -> 5
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 3 -> 2 -> 1 -> 0
[6]
GRAPH STATE (SHOULD BE 0): 0
Run # 28: 

Run # 29: 

Run # 30: 

graph:
[0]
[1] -> 3
[2] -> 6 -> 5 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 3
[5] -> 2
[6] -> 3 -> 2
found odd cycle! : 2, 3, 6, 2, 
contracting cycle...
[0]
[1] -> 3
[2] -> 6 -> 5 -> 3
(3) -> [2] -> 6 -> 4 -> 2 -> 1
[4] -> 3
[5] -> 2
(6) -> [2] -> 3 -> 2
constructed path: 
[0]
[1]
[2] -> 5
[3] -> 4
[4] -> 3
[5] -> 2
[6]
expanding 2 from 2 into -1
expanding 3 from 2 into -1
expanding 6 from 2 into -1
FINISHED EXPANDING GRAPH:
[0]
[1] -> 3
[2] -> 6 -> 5 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 3
[5] -> 2
[6] -> 3 -> 2
lifted path: 
[0]
[1]
[2] -> 5
[3] -> 4
[4] -> 3
[5] -> 2
[6]
resulting graph:
[0]
[1] -> 3
[2] -> 6 -> 5 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 3
[5] -> 2
[6] -> 3 -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 31: 

Run # 32: 

Run # 33: 

graph:
[0] -> 6 -> 4
[1]
[2]
[3] -> 6
[4] -> 6 -> 0
[5]
[6] -> 4 -> 3 -> 0
found odd cycle! : 0, 6, 4, 0, 
contracting cycle...
[0] -> 6 -> 4
[1]
[2]
[3] -> 6
(4) -> [0] -> 6 -> 0
[5]
(6) -> [0] -> 4 -> 3 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 4 -> 2 -> 1
[1] -> 5 -> 0
[2] -> 4 -> 0
[3] -> 6
[4] -> 2 -> 0
[5] -> 1
[6] -> 3
found odd cycle! : 0, 4, 2, 0, 
contracting cycle...
[0] -> 4 -> 2 -> 1
[1] -> 5 -> 0
(2) -> [0] -> 4 -> 0
[3] -> 6
(4) -> [0] -> 2 -> 0
[5] -> 1
[6] -> 3
no path found through odd cycle, restarting...
graph:
[0] -> 5 -> 4
[1] -> 6 -> 5 -> 2
[2] -> 5 -> 1
[3]
[4] -> 0
[5] -> 6 -> 2 -> 1 -> 0
[6] -> 5 -> 1
found odd cycle! : 1, 5, 6, 1, 
contracting cycle...
[0] -> 5 -> 4
[1] -> 6 -> 5 -> 2
[2] -> 5 -> 1
[3]
[4] -> 0
(5) -> [1] -> 6 -> 2 -> 1 -> 0
(6) -> [1] -> 5 -> 1
constructed path: 
[0]
[1] -> 2
[2] -> 5 -> 1
[3]
[4]
[5] -> 2
[6]
expanding 1 from 1 into -1
expanding 5 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5 -> 4
[1] -> 6 -> 5 -> 2
[2] -> 5 -> 1
[3]
[4] -> 0
[5] -> 6 -> 2 -> 1 -> 0
[6] -> 5 -> 1
lifted path: 
[0]
[1] -> 2
[2] -> 5 -> 1
[3]
[4]
[5] -> 2
[6]
resulting graph:
[0] -> 5 -> 4
[1] -> 6 -> 5 -> 2
[2] -> 5 -> 1
[3]
[4] -> 0
[5] -> 6 -> 2 -> 1 -> 0
[6] -> 5 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 34: 

Run # 35: 

graph:
[0] -> 4
[1]
[2] -> 6 -> 5 -> 4
[3]
[4] -> 2 -> 0
[5] -> 6 -> 2
[6] -> 5 -> 2
found odd cycle! : 5, 2, 6, 5, 
contracting cycle...
[0] -> 4
[1]
(2) -> [5] -> 6 -> 5 -> 4
[3]
[4] -> 2 -> 0
[5] -> 6 -> 2
(6) -> [5] -> 5 -> 2
no path found through odd cycle, restarting...
graph:
[0] -> 1
[1] -> 0
[2] -> 5 -> 3
[3] -> 2
[4] -> 6 -> 5
[5] -> 6 -> 4 -> 2
[6] -> 5 -> 4
found odd cycle! : 4, 5, 6, 4, 
contracting cycle...
[0] -> 1
[1] -> 0
[2] -> 5 -> 3
[3] -> 2
[4] -> 6 -> 5
(5) -> [4] -> 6 -> 4 -> 2
(6) -> [4] -> 5 -> 4
no path found through odd cycle, restarting...
graph:
[0] -> 3
[1] -> 2
[2] -> 5 -> 4 -> 1
[3] -> 4 -> 0
[4] -> 5 -> 3 -> 2
[5] -> 4 -> 2
[6]
found odd cycle! : 2, 4, 5, 2, 
contracting cycle...
[0] -> 3
[1] -> 2
[2] -> 5 -> 4 -> 1
[3] -> 4 -> 0
(4) -> [2] -> 5 -> 3 -> 2
(5) -> [2] -> 4 -> 2
[6]
constructed path: 
[0]
[1] -> 2
[2] -> 1
[3] -> 4
[4] -> 3
[5]
[6]
expanding 2 from 2 into -1
expanding 4 from 2 into -1
expanding 5 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 3
[1] -> 2
[2] -> 5 -> 4 -> 1
[3] -> 4 -> 0
[4] -> 5 -> 3 -> 2
[5] -> 4 -> 2
[6]
lifted path: 
[0]
[1] -> 2
[2] -> 1
[3] -> 4
[4] -> 3
[5]
[6]
resulting graph:
[0] -> 3
[1] -> 2
[2] -> 5 -> 4 -> 1
[3] -> 4 -> 0
[4] -> 5 -> 3 -> 2
[5] -> 4 -> 2
[6]
GRAPH STATE (SHOULD BE 0): 0
Run # 36: 

Run # 37: 

Run # 38: 

graph:
[0] -> 5 -> 3 -> 1
[1] -> 0
[2]
[3] -> 5 -> 0
[4]
[5] -> 3 -> 0
[6]
found odd cycle! : 0, 5, 3, 0, 
contracting cycle...
[0] -> 5 -> 3 -> 1
[1] -> 0
[2]
(3) -> [0] -> 5 -> 0
[4]
(5) -> [0] -> 3 -> 0
[6]
no path found through odd cycle, restarting...
graph:
[0] -> 1
[1] -> 6 -> 5 -> 0
[2]
[3] -> 6 -> 5 -> 4
[4] -> 3
[5] -> 6 -> 3 -> 1
[6] -> 5 -> 3 -> 1
found odd cycle! : 5, 1, 6, 5, 
contracting cycle...
[0] -> 1
(1) -> [5] -> 6 -> 5 -> 0
[2]
[3] -> 6 -> 5 -> 4
[4] -> 3
[5] -> 6 -> 3 -> 1
(6) -> [5] -> 5 -> 3 -> 1
constructed path: 
[0]
[1]
[2]
[3] -> 6 -> 5
[4]
[5] -> 3
[6] -> 3
expanding 1 from 5 into -1
expanding 5 from 5 into -1
expanding 6 from 5 into -1
FINISHED EXPANDING GRAPH:
[0] -> 1
[1] -> 6 -> 5 -> 0
[2]
[3] -> 6 -> 5 -> 4
[4] -> 3
[5] -> 6 -> 3 -> 1
[6] -> 5 -> 3 -> 1
lifted path: 
[0]
[1]
[2]
[3] -> 6 -> 5
[4]
[5] -> 3
[6] -> 3
resulting graph:
[0] -> 1
[1] -> 6 -> 5 -> 0
[2]
[3] -> 6 -> 5 -> 4
[4] -> 3
[5] -> 6 -> 3 -> 1
[6] -> 5 -> 3 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 39: 

graph:
[0] -> 2
[1]
[2] -> 6 -> 4 -> 0
[3] -> 6
[4] -> 6 -> 5 -> 2
[5] -> 4
[6] -> 4 -> 3 -> 2
found odd cycle! : 4, 2, 6, 4, 
contracting cycle...
[0] -> 2
[1]
(2) -> [4] -> 6 -> 4 -> 0
[3] -> 6
[4] -> 6 -> 5 -> 2
[5] -> 4
(6) -> [4] -> 4 -> 3 -> 2
constructed path: 
[0]
[1]
[2]
[3] -> 6
[4] -> 5
[5] -> 4
[6] -> 3
expanding 2 from 4 into -1
expanding 4 from 4 into -1
expanding 6 from 4 into -1
FINISHED EXPANDING GRAPH:
[0] -> 2
[1]
[2] -> 6 -> 4 -> 0
[3] -> 6
[4] -> 6 -> 5 -> 2
[5] -> 4
[6] -> 4 -> 3 -> 2
lifted path: 
[0]
[1]
[2]
[3] -> 6
[4] -> 5
[5] -> 4
[6] -> 3
resulting graph:
[0] -> 2
[1]
[2] -> 6 -> 4 -> 0
[3] -> 6
[4] -> 6 -> 5 -> 2
[5] -> 4
[6] -> 4 -> 3 -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 40: 

graph:
[0] -> 3
[1] -> 6 -> 3 -> 2
[2] -> 3 -> 1
[3] -> 6 -> 4 -> 2 -> 1 -> 0
[4] -> 6 -> 3
[5]
[6] -> 4 -> 3 -> 1
found odd cycle! : 1, 3, 6, 1, 
contracting cycle...
[0] -> 3
[1] -> 6 -> 3 -> 2
[2] -> 3 -> 1
(3) -> [1] -> 6 -> 4 -> 2 -> 1 -> 0
[4] -> 6 -> 3
[5]
(6) -> [1] -> 4 -> 3 -> 1
constructed path: 
[0]
[1] -> 2
[2] -> 1
[3] -> 4
[4] -> 3
[5]
[6]
expanding 1 from 1 into -1
expanding 3 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 3
[1] -> 6 -> 3 -> 2
[2] -> 3 -> 1
[3] -> 6 -> 4 -> 2 -> 1 -> 0
[4] -> 6 -> 3
[5]
[6] -> 4 -> 3 -> 1
lifted path: 
[0]
[1] -> 2
[2] -> 1
[3] -> 4
[4] -> 3
[5]
[6]
resulting graph:
[0] -> 3
[1] -> 6 -> 3 -> 2
[2] -> 3 -> 1
[3] -> 6 -> 4 -> 2 -> 1 -> 0
[4] -> 6 -> 3
[5]
[6] -> 4 -> 3 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 41: 

Run # 42: 

Run # 43: 

Run # 44: 

graph:
[0] -> 5
[1] -> 4 -> 3 -> 2
[2] -> 4 -> 1
[3] -> 1
[4] -> 5 -> 2 -> 1
[5] -> 6 -> 4 -> 0
[6] -> 5
found odd cycle! : 1, 4, 2, 1, 
contracting cycle...
[0] -> 5
[1] -> 4 -> 3 -> 2
(2) -> [1] -> 4 -> 1
[3] -> 1
(4) -> [1] -> 5 -> 2 -> 1
[5] -> 6 -> 4 -> 0
[6] -> 5
constructed path: 
[0]
[1] -> 3
[2]
[3] -> 1
[4] -> 5
[5] -> 4
[6]
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 4 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5
[1] -> 4 -> 3 -> 2
[2] -> 4 -> 1
[3] -> 1
[4] -> 5 -> 2 -> 1
[5] -> 6 -> 4 -> 0
[6] -> 5
lifted path: 
[0]
[1] -> 3
[2]
[3] -> 1
[4] -> 5
[5] -> 4
[6]
resulting graph:
[0] -> 5
[1] -> 4 -> 3 -> 2
[2] -> 4 -> 1
[3] -> 1
[4] -> 5 -> 2 -> 1
[5] -> 6 -> 4 -> 0
[6] -> 5
GRAPH STATE (SHOULD BE 0): 0
Run # 45: 

graph:
[0]
[1] -> 6 -> 5 -> 4
[2] -> 5
[3] -> 6
[4] -> 5 -> 1
[5] -> 4 -> 2 -> 1
[6] -> 3 -> 1
found odd cycle! : 4, 1, 5, 4, 
contracting cycle...
[0]
(1) -> [4] -> 6 -> 5 -> 4
[2] -> 5
[3] -> 6
[4] -> 5 -> 1
(5) -> [4] -> 4 -> 2 -> 1
[6] -> 3 -> 1
no path found through odd cycle, restarting...
graph:
[0] -> 6 -> 5
[1]
[2] -> 5 -> 4
[3] -> 4
[4] -> 5 -> 3 -> 2
[5] -> 4 -> 2 -> 0
[6] -> 0
found odd cycle! : 2, 5, 4, 2, 
contracting cycle...
[0] -> 6 -> 5
[1]
[2] -> 5 -> 4
[3] -> 4
(4) -> [2] -> 5 -> 3 -> 2
(5) -> [2] -> 4 -> 2 -> 0
[6] -> 0
constructed path: 
[0] -> 5
[1]
[2]
[3] -> 4
[4] -> 3
[5] -> 0
[6]
expanding 2 from 2 into -1
expanding 4 from 2 into -1
expanding 5 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6 -> 5
[1]
[2] -> 5 -> 4
[3] -> 4
[4] -> 5 -> 3 -> 2
[5] -> 4 -> 2 -> 0
[6] -> 0
lifted path: 
[0] -> 5
[1]
[2]
[3] -> 4
[4] -> 3
[5] -> 0
[6]
resulting graph:
[0] -> 6 -> 5
[1]
[2] -> 5 -> 4
[3] -> 4
[4] -> 5 -> 3 -> 2
[5] -> 4 -> 2 -> 0
[6] -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 46: 

Run # 47: 

Run # 48: 

Run # 49: 

Run # 50: 

graph:
[0] -> 6 -> 4
[1] -> 6
[2] -> 6 -> 4
[3] -> 6
[4] -> 2 -> 0
[5]
[6] -> 3 -> 2 -> 1 -> 0
found odd cycle! : 2, 0, 4, 2, 
contracting cycle...
(0) -> [2] -> 6 -> 4
[1] -> 6
[2] -> 6 -> 4
[3] -> 6
(4) -> [2] -> 2 -> 0
[5]
[6] -> 3 -> 2 -> 1 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 4 -> 3
[1] -> 6 -> 5 -> 3
[2] -> 5
[3] -> 5 -> 1 -> 0
[4] -> 0
[5] -> 3 -> 2 -> 1
[6] -> 1
found odd cycle! : 1, 3, 5, 1, 
contracting cycle...
[0] -> 4 -> 3
[1] -> 6 -> 5 -> 3
[2] -> 5
(3) -> [1] -> 5 -> 1 -> 0
[4] -> 0
(5) -> [1] -> 3 -> 2 -> 1
[6] -> 1
constructed path: 
[0] -> 3
[1] -> 6
[2]
[3] -> 0
[4]
[5]
[6] -> 1
expanding 1 from 1 into -1
expanding 3 from 1 into -1
expanding 5 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 4 -> 3
[1] -> 6 -> 5 -> 3
[2] -> 5
[3] -> 5 -> 1 -> 0
[4] -> 0
[5] -> 3 -> 2 -> 1
[6] -> 1
lifted path: 
[0] -> 3
[1] -> 6
[2]
[3] -> 0
[4]
[5]
[6] -> 1
resulting graph:
[0] -> 4 -> 3
[1] -> 6 -> 5 -> 3
[2] -> 5
[3] -> 5 -> 1 -> 0
[4] -> 0
[5] -> 3 -> 2 -> 1
[6] -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 51: 

Run # 52: 

Run # 53: 

graph:
[0] -> 1
[1] -> 4 -> 2 -> 0
[2] -> 4 -> 1
[3] -> 6
[4] -> 2 -> 1
[5]
[6] -> 3
found odd cycle! : 2, 1, 4, 2, 
contracting cycle...
[0] -> 1
(1) -> [2] -> 4 -> 2 -> 0
[2] -> 4 -> 1
[3] -> 6
(4) -> [2] -> 2 -> 1
[5]
[6] -> 3
no path found through odd cycle, restarting...
graph:
[0] -> 6 -> 3
[1]
[2] -> 4
[3] -> 6 -> 0
[4] -> 6 -> 5 -> 2
[5] -> 4
[6] -> 4 -> 3 -> 0
found odd cycle! : 0, 6, 3, 0, 
contracting cycle...
[0] -> 6 -> 3
[1]
[2] -> 4
(3) -> [0] -> 6 -> 0
[4] -> 6 -> 5 -> 2
[5] -> 4
(6) -> [0] -> 4 -> 3 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 3
[1] -> 3
[2] -> 6 -> 3
[3] -> 6 -> 4 -> 2 -> 1 -> 0
[4] -> 3
[5]
[6] -> 3 -> 2
found odd cycle! : 2, 3, 6, 2, 
contracting cycle...
[0] -> 3
[1] -> 3
[2] -> 6 -> 3
(3) -> [2] -> 6 -> 4 -> 2 -> 1 -> 0
[4] -> 3
[5]
(6) -> [2] -> 3 -> 2
constructed path: 
[0]
[1] -> 3
[2]
[3] -> 1 -> 4
[4] -> 3
[5]
[6]
expanding 2 from 2 into -1
expanding 3 from 2 into -1
expanding 6 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 3
[1] -> 3
[2] -> 6 -> 3
[3] -> 6 -> 4 -> 2 -> 1 -> 0
[4] -> 3
[5]
[6] -> 3 -> 2
lifted path: 
[0]
[1] -> 3
[2]
[3] -> 1 -> 4
[4] -> 3
[5]
[6]
resulting graph:
[0] -> 3
[1] -> 3
[2] -> 6 -> 3
[3] -> 6 -> 4 -> 2 -> 1 -> 0
[4] -> 3
[5]
[6] -> 3 -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 54: 

graph:
[0] -> 4
[1] -> 5
[2] -> 6 -> 5
[3] -> 5 -> 4
[4] -> 5 -> 3 -> 0
[5] -> 4 -> 3 -> 2 -> 1
[6] -> 2
found odd cycle! : 3, 4, 5, 3, 
contracting cycle...
[0] -> 4
[1] -> 5
[2] -> 6 -> 5
[3] -> 5 -> 4
(4) -> [3] -> 5 -> 3 -> 0
(5) -> [3] -> 4 -> 3 -> 2 -> 1
[6] -> 2
constructed path: 
[0] -> 4
[1]
[2] -> 5
[3]
[4] -> 0
[5] -> 2
[6]
expanding 3 from 3 into -1
expanding 4 from 3 into -1
expanding 5 from 3 into -1
FINISHED EXPANDING GRAPH:
[0] -> 4
[1] -> 5
[2] -> 6 -> 5
[3] -> 5 -> 4
[4] -> 5 -> 3 -> 0
[5] -> 4 -> 3 -> 2 -> 1
[6] -> 2
lifted path: 
[0] -> 4
[1]
[2] -> 5
[3]
[4] -> 0
[5] -> 2
[6]
resulting graph:
[0] -> 4
[1] -> 5
[2] -> 6 -> 5
[3] -> 5 -> 4
[4] -> 5 -> 3 -> 0
[5] -> 4 -> 3 -> 2 -> 1
[6] -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 55: 

graph:
[0] -> 5 -> 2
[1] -> 3 -> 2
[2] -> 3 -> 1 -> 0
[3] -> 2 -> 1
[4]
[5] -> 0
[6]
found odd cycle! : 1, 2, 3, 1, 
contracting cycle...
[0] -> 5 -> 2
[1] -> 3 -> 2
(2) -> [1] -> 3 -> 1 -> 0
(3) -> [1] -> 2 -> 1
[4]
[5] -> 0
[6]
no path found through odd cycle, restarting...
graph:
[0] -> 5
[1] -> 6 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 4
[4] -> 6 -> 3
[5] -> 2 -> 0
[6] -> 4 -> 2 -> 1
found odd cycle! : 1, 2, 6, 1, 
contracting cycle...
[0] -> 5
[1] -> 6 -> 2
(2) -> [1] -> 6 -> 5 -> 1
[3] -> 4
[4] -> 6 -> 3
[5] -> 2 -> 0
(6) -> [1] -> 4 -> 2 -> 1
constructed path: 
[0]
[1]
[2] -> 5
[3]
[4] -> 6
[5] -> 2
[6] -> 4
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5
[1] -> 6 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 4
[4] -> 6 -> 3
[5] -> 2 -> 0
[6] -> 4 -> 2 -> 1
lifted path: 
[0]
[1]
[2] -> 5
[3]
[4] -> 6
[5] -> 2
[6] -> 4
resulting graph:
[0] -> 5
[1] -> 6 -> 2
[2] -> 6 -> 5 -> 1
[3] -> 4
[4] -> 6 -> 3
[5] -> 2 -> 0
[6] -> 4 -> 2 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 56: 

graph:
[0] -> 5 -> 4
[1] -> 4 -> 2
[2] -> 4 -> 1
[3] -> 4
[4] -> 3 -> 2 -> 1 -> 0
[5] -> 0
[6]
found odd cycle! : 1, 4, 2, 1, 
contracting cycle...
[0] -> 5 -> 4
[1] -> 4 -> 2
(2) -> [1] -> 4 -> 1
[3] -> 4
(4) -> [1] -> 3 -> 2 -> 1 -> 0
[5] -> 0
[6]
constructed path: 
[0] -> 4
[1]
[2]
[3] -> 4
[4] -> 0 -> 3
[5]
[6]
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 4 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5 -> 4
[1] -> 4 -> 2
[2] -> 4 -> 1
[3] -> 4
[4] -> 3 -> 2 -> 1 -> 0
[5] -> 0
[6]
lifted path: 
[0] -> 4
[1]
[2]
[3] -> 4
[4] -> 0 -> 3
[5]
[6]
resulting graph:
[0] -> 5 -> 4
[1] -> 4 -> 2
[2] -> 4 -> 1
[3] -> 4
[4] -> 3 -> 2 -> 1 -> 0
[5] -> 0
[6]
GRAPH STATE (SHOULD BE 0): 0
Run # 57: 

Run # 58: 

Run # 59: 

Run # 60: 

graph:
[0] -> 5 -> 3
[1] -> 4 -> 2
[2] -> 5 -> 4 -> 1
[3] -> 0
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 2 -> 0
[6]
found odd cycle! : 2, 5, 4, 2, 
contracting cycle...
[0] -> 5 -> 3
[1] -> 4 -> 2
[2] -> 5 -> 4 -> 1
[3] -> 0
(4) -> [2] -> 5 -> 2 -> 1
(5) -> [2] -> 4 -> 2 -> 0
[6]
constructed path: 
[0]
[1] -> 4 -> 2
[2] -> 1
[3]
[4] -> 1
[5]
[6]
expanding 2 from 2 into -1
expanding 4 from 2 into -1
expanding 5 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5 -> 3
[1] -> 4 -> 2
[2] -> 5 -> 4 -> 1
[3] -> 0
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 2 -> 0
[6]
lifted path: 
[0]
[1] -> 4 -> 2
[2] -> 1
[3]
[4] -> 1
[5]
[6]
resulting graph:
[0] -> 5 -> 3
[1] -> 4 -> 2
[2] -> 5 -> 4 -> 1
[3] -> 0
[4] -> 5 -> 2 -> 1
[5] -> 4 -> 2 -> 0
[6]
GRAPH STATE (SHOULD BE 0): 0
Run # 61: 

graph:
[0] -> 4
[1] -> 6 -> 3
[2] -> 5
[3] -> 6 -> 1
[4] -> 0
[5] -> 2
[6] -> 3 -> 1
found odd cycle! : 3, 1, 6, 3, 
contracting cycle...
[0] -> 4
(1) -> [3] -> 6 -> 3
[2] -> 5
[3] -> 6 -> 1
[4] -> 0
[5] -> 2
(6) -> [3] -> 3 -> 1
no path found through odd cycle, restarting...
graph:
[0] -> 1
[1] -> 4 -> 3 -> 0
[2] -> 6 -> 4 -> 3
[3] -> 4 -> 2 -> 1
[4] -> 3 -> 2 -> 1
[5]
[6] -> 2
found odd cycle! : 3, 1, 4, 3, 
contracting cycle...
[0] -> 1
(1) -> [3] -> 4 -> 3 -> 0
[2] -> 6 -> 4 -> 3
[3] -> 4 -> 2 -> 1
(4) -> [3] -> 3 -> 2 -> 1
[5]
[6] -> 2
constructed path: 
[0]
[1]
[2] -> 4 -> 3
[3] -> 2
[4] -> 2
[5]
[6]
expanding 1 from 3 into -1
expanding 3 from 3 into -1
expanding 4 from 3 into -1
FINISHED EXPANDING GRAPH:
[0] -> 1
[1] -> 4 -> 3 -> 0
[2] -> 6 -> 4 -> 3
[3] -> 4 -> 2 -> 1
[4] -> 3 -> 2 -> 1
[5]
[6] -> 2
lifted path: 
[0]
[1]
[2] -> 4 -> 3
[3] -> 2
[4] -> 2
[5]
[6]
resulting graph:
[0] -> 1
[1] -> 4 -> 3 -> 0
[2] -> 6 -> 4 -> 3
[3] -> 4 -> 2 -> 1
[4] -> 3 -> 2 -> 1
[5]
[6] -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 62: 

Run # 63: 

graph:
[0] -> 2
[1] -> 4 -> 3
[2] -> 0
[3] -> 4 -> 1
[4] -> 3 -> 1
[5]
[6]
found odd cycle! : 3, 1, 4, 3, 
contracting cycle...
[0] -> 2
(1) -> [3] -> 4 -> 3
[2] -> 0
[3] -> 4 -> 1
(4) -> [3] -> 3 -> 1
[5]
[6]
no path found through odd cycle, restarting...
graph:
[0]
[1] -> 4 -> 3
[2] -> 5 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 3 -> 1
[5] -> 2
[6] -> 3
found odd cycle! : 3, 1, 4, 3, 
contracting cycle...
[0]
(1) -> [3] -> 4 -> 3
[2] -> 5 -> 3
[3] -> 6 -> 4 -> 2 -> 1
(4) -> [3] -> 3 -> 1
[5] -> 2
[6] -> 3
constructed path: 
[0]
[1]
[2] -> 3
[3] -> 2 -> 6
[4]
[5]
[6] -> 3
expanding 1 from 3 into -1
expanding 3 from 3 into -1
expanding 4 from 3 into -1
FINISHED EXPANDING GRAPH:
[0]
[1] -> 4 -> 3
[2] -> 5 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 3 -> 1
[5] -> 2
[6] -> 3
lifted path: 
[0]
[1]
[2] -> 3
[3] -> 2 -> 6
[4]
[5]
[6] -> 3
resulting graph:
[0]
[1] -> 4 -> 3
[2] -> 5 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 3 -> 1
[5] -> 2
[6] -> 3
GRAPH STATE (SHOULD BE 0): 0
Run # 64: 

Run # 65: 

graph:
[0]
[1] -> 4
[2] -> 6 -> 4 -> 3
[3] -> 5 -> 2
[4] -> 6 -> 2 -> 1
[5] -> 3
[6] -> 4 -> 2
found odd cycle! : 2, 4, 6, 2, 
contracting cycle...
[0]
[1] -> 4
[2] -> 6 -> 4 -> 3
[3] -> 5 -> 2
(4) -> [2] -> 6 -> 2 -> 1
[5] -> 3
(6) -> [2] -> 4 -> 2
constructed path: 
[0]
[1] -> 4
[2] -> 3
[3] -> 2
[4] -> 1
[5]
[6]
expanding 2 from 2 into -1
expanding 4 from 2 into -1
expanding 6 from 2 into -1
FINISHED EXPANDING GRAPH:
[0]
[1] -> 4
[2] -> 6 -> 4 -> 3
[3] -> 5 -> 2
[4] -> 6 -> 2 -> 1
[5] -> 3
[6] -> 4 -> 2
lifted path: 
[0]
[1] -> 4
[2] -> 3
[3] -> 2
[4] -> 1
[5]
[6]
resulting graph:
[0]
[1] -> 4
[2] -> 6 -> 4 -> 3
[3] -> 5 -> 2
[4] -> 6 -> 2 -> 1
[5] -> 3
[6] -> 4 -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 66: 

graph:
[0] -> 3
[1] -> 4
[2] -> 4
[3] -> 6 -> 5 -> 0
[4] -> 2 -> 1
[5] -> 6 -> 3
[6] -> 5 -> 3
found odd cycle! : 5, 3, 6, 5, 
contracting cycle...
[0] -> 3
[1] -> 4
[2] -> 4
(3) -> [5] -> 6 -> 5 -> 0
[4] -> 2 -> 1
[5] -> 6 -> 3
(6) -> [5] -> 5 -> 3
no path found through odd cycle, restarting...
graph:
[0] -> 5 -> 4 -> 3
[1]
[2] -> 3
[3] -> 2 -> 0
[4] -> 5 -> 0
[5] -> 4 -> 0
[6]
found odd cycle! : 0, 5, 4, 0, 
contracting cycle...
[0] -> 5 -> 4 -> 3
[1]
[2] -> 3
[3] -> 2 -> 0
(4) -> [0] -> 5 -> 0
(5) -> [0] -> 4 -> 0
[6]
no path found through odd cycle, restarting...
graph:
[0]
[1] -> 6 -> 5 -> 3 -> 2
[2] -> 3 -> 1
[3] -> 5 -> 2 -> 1
[4] -> 6 -> 5
[5] -> 4 -> 3 -> 1
[6] -> 4 -> 1
found odd cycle! : 2, 1, 3, 2, 
contracting cycle...
[0]
(1) -> [2] -> 6 -> 5 -> 3 -> 2
[2] -> 3 -> 1
(3) -> [2] -> 5 -> 2 -> 1
[4] -> 6 -> 5
[5] -> 4 -> 3 -> 1
[6] -> 4 -> 1
no path found through odd cycle, restarting...
graph:
[0] -> 5
[1] -> 5 -> 2
[2] -> 5 -> 4 -> 1
[3] -> 5
[4] -> 2
[5] -> 6 -> 3 -> 2 -> 1 -> 0
[6] -> 5
found odd cycle! : 1, 5, 2, 1, 
contracting cycle...
[0] -> 5
[1] -> 5 -> 2
(2) -> [1] -> 5 -> 4 -> 1
[3] -> 5
[4] -> 2
(5) -> [1] -> 6 -> 3 -> 2 -> 1 -> 0
[6] -> 5
constructed path: 
[0]
[1]
[2] -> 4
[3]
[4] -> 2
[5] -> 6
[6] -> 5
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 5 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5
[1] -> 5 -> 2
[2] -> 5 -> 4 -> 1
[3] -> 5
[4] -> 2
[5] -> 6 -> 3 -> 2 -> 1 -> 0
[6] -> 5
lifted path: 
[0]
[1]
[2] -> 4
[3]
[4] -> 2
[5] -> 6
[6] -> 5
resulting graph:
[0] -> 5
[1] -> 5 -> 2
[2] -> 5 -> 4 -> 1
[3] -> 5
[4] -> 2
[5] -> 6 -> 3 -> 2 -> 1 -> 0
[6] -> 5
GRAPH STATE (SHOULD BE 0): 0
Run # 67: 

graph:
[0] -> 5
[1] -> 4 -> 3 -> 2
[2] -> 4 -> 1
[3] -> 1
[4] -> 6 -> 5 -> 2 -> 1
[5] -> 4 -> 0
[6] -> 4
found odd cycle! : 1, 4, 2, 1, 
contracting cycle...
[0] -> 5
[1] -> 4 -> 3 -> 2
(2) -> [1] -> 4 -> 1
[3] -> 1
(4) -> [1] -> 6 -> 5 -> 2 -> 1
[5] -> 4 -> 0
[6] -> 4
constructed path: 
[0]
[1] -> 3
[2]
[3] -> 1
[4] -> 6
[5]
[6] -> 4
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 4 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5
[1] -> 4 -> 3 -> 2
[2] -> 4 -> 1
[3] -> 1
[4] -> 6 -> 5 -> 2 -> 1
[5] -> 4 -> 0
[6] -> 4
lifted path: 
[0]
[1] -> 3
[2]
[3] -> 1
[4] -> 6
[5]
[6] -> 4
resulting graph:
[0] -> 5
[1] -> 4 -> 3 -> 2
[2] -> 4 -> 1
[3] -> 1
[4] -> 6 -> 5 -> 2 -> 1
[5] -> 4 -> 0
[6] -> 4
GRAPH STATE (SHOULD BE 0): 0
Run # 68: 

Run # 69: 

Run # 70: 

Run # 71: 

Run # 72: 

graph:
[0] -> 6
[1] -> 5
[2] -> 6 -> 4
[3] -> 4
[4] -> 6 -> 3 -> 2
[5] -> 1
[6] -> 4 -> 2 -> 0
found odd cycle! : 2, 6, 4, 2, 
contracting cycle...
[0] -> 6
[1] -> 5
[2] -> 6 -> 4
[3] -> 4
(4) -> [2] -> 6 -> 3 -> 2
[5] -> 1
(6) -> [2] -> 4 -> 2 -> 0
constructed path: 
[0] -> 6
[1]
[2]
[3] -> 4
[4] -> 3
[5]
[6] -> 0
expanding 2 from 2 into -1
expanding 4 from 2 into -1
expanding 6 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6
[1] -> 5
[2] -> 6 -> 4
[3] -> 4
[4] -> 6 -> 3 -> 2
[5] -> 1
[6] -> 4 -> 2 -> 0
lifted path: 
[0] -> 6
[1]
[2]
[3] -> 4
[4] -> 3
[5]
[6] -> 0
resulting graph:
[0] -> 6
[1] -> 5
[2] -> 6 -> 4
[3] -> 4
[4] -> 6 -> 3 -> 2
[5] -> 1
[6] -> 4 -> 2 -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 73: 

graph:
[0] -> 3 -> 2
[1]
[2] -> 3 -> 0
[3] -> 2 -> 0
[4]
[5]
[6]
found odd cycle! : 0, 3, 2, 0, 
contracting cycle...
[0] -> 3 -> 2
[1]
(2) -> [0] -> 3 -> 0
(3) -> [0] -> 2 -> 0
[4]
[5]
[6]
no path found through odd cycle, restarting...
graph:
[0] -> 6
[1]
[2] -> 6 -> 5
[3]
[4]
[5] -> 6 -> 2
[6] -> 5 -> 2 -> 0
found odd cycle! : 2, 6, 5, 2, 
contracting cycle...
[0] -> 6
[1]
[2] -> 6 -> 5
[3]
[4]
(5) -> [2] -> 6 -> 2
(6) -> [2] -> 5 -> 2 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 3
[1] -> 6 -> 5 -> 4
[2] -> 4
[3] -> 5 -> 0
[4] -> 2 -> 1
[5] -> 6 -> 3 -> 1
[6] -> 5 -> 1
found odd cycle! : 1, 5, 6, 1, 
contracting cycle...
[0] -> 3
[1] -> 6 -> 5 -> 4
[2] -> 4
[3] -> 5 -> 0
[4] -> 2 -> 1
(5) -> [1] -> 6 -> 3 -> 1
(6) -> [1] -> 5 -> 1
constructed path: 
[0]
[1] -> 4
[2]
[3] -> 5
[4] -> 1
[5] -> 3
[6]
expanding 1 from 1 into -1
expanding 5 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 3
[1] -> 6 -> 5 -> 4
[2] -> 4
[3] -> 5 -> 0
[4] -> 2 -> 1
[5] -> 6 -> 3 -> 1
[6] -> 5 -> 1
lifted path: 
[0]
[1] -> 4
[2]
[3] -> 5
[4] -> 1
[5] -> 3
[6]
resulting graph:
[0] -> 3
[1] -> 6 -> 5 -> 4
[2] -> 4
[3] -> 5 -> 0
[4] -> 2 -> 1
[5] -> 6 -> 3 -> 1
[6] -> 5 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 74: 

Run # 75: 

Run # 76: 

Run # 77: 

graph:
[0] -> 6 -> 5 -> 3
[1] -> 4
[2]
[3] -> 0
[4] -> 1
[5] -> 6 -> 0
[6] -> 5 -> 0
found odd cycle! : 0, 6, 5, 0, 
contracting cycle...
[0] -> 6 -> 5 -> 3
[1] -> 4
[2]
[3] -> 0
[4] -> 1
(5) -> [0] -> 6 -> 0
(6) -> [0] -> 5 -> 0
no path found through odd cycle, restarting...
graph:
[0]
[1] -> 3
[2]
[3] -> 5 -> 1
[4] -> 6 -> 5
[5] -> 6 -> 4 -> 3
[6] -> 5 -> 4
found odd cycle! : 4, 5, 6, 4, 
contracting cycle...
[0]
[1] -> 3
[2]
[3] -> 5 -> 1
[4] -> 6 -> 5
(5) -> [4] -> 6 -> 4 -> 3
(6) -> [4] -> 5 -> 4
no path found through odd cycle, restarting...
graph:
[0] -> 6 -> 3
[1]
[2] -> 3
[3] -> 6 -> 2 -> 0
[4] -> 5
[5] -> 4
[6] -> 3 -> 0
found odd cycle! : 0, 6, 3, 0, 
contracting cycle...
[0] -> 6 -> 3
[1]
[2] -> 3
(3) -> [0] -> 6 -> 2 -> 0
[4] -> 5
[5] -> 4
(6) -> [0] -> 3 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 5
[1] -> 6 -> 4 -> 3 -> 2
[2] -> 4 -> 1
[3] -> 1
[4] -> 6 -> 2 -> 1
[5] -> 0
[6] -> 4 -> 1
found odd cycle! : 2, 1, 4, 2, 
contracting cycle...
[0] -> 5
(1) -> [2] -> 6 -> 4 -> 3 -> 2
[2] -> 4 -> 1
[3] -> 1
(4) -> [2] -> 6 -> 2 -> 1
[5] -> 0
[6] -> 4 -> 1
no path found through odd cycle, restarting...
graph:
[0] -> 5 -> 4
[1]
[2] -> 6
[3]
[4] -> 5 -> 0
[5] -> 4 -> 0
[6] -> 2
found odd cycle! : 0, 5, 4, 0, 
contracting cycle...
[0] -> 5 -> 4
[1]
[2] -> 6
[3]
(4) -> [0] -> 5 -> 0
(5) -> [0] -> 4 -> 0
[6] -> 2
no path found through odd cycle, restarting...
graph:
[0] -> 4
[1] -> 6 -> 2
[2] -> 5 -> 3 -> 1
[3] -> 6 -> 2
[4] -> 6 -> 5 -> 0
[5] -> 6 -> 4 -> 2
[6] -> 5 -> 4 -> 3 -> 1
found odd cycle! : 5, 4, 6, 5, 
contracting cycle...
[0] -> 4
[1] -> 6 -> 2
[2] -> 5 -> 3 -> 1
[3] -> 6 -> 2
(4) -> [5] -> 6 -> 5 -> 0
[5] -> 6 -> 4 -> 2
(6) -> [5] -> 5 -> 4 -> 3 -> 1
constructed path: 
[0]
[1]
[2] -> 5
[3] -> 6
[4]
[5] -> 2
[6] -> 3
expanding 4 from 5 into -1
expanding 5 from 5 into -1
expanding 6 from 5 into -1
FINISHED EXPANDING GRAPH:
[0] -> 4
[1] -> 6 -> 2
[2] -> 5 -> 3 -> 1
[3] -> 6 -> 2
[4] -> 6 -> 5 -> 0
[5] -> 6 -> 4 -> 2
[6] -> 5 -> 4 -> 3 -> 1
lifted path: 
[0]
[1]
[2] -> 5
[3] -> 6
[4]
[5] -> 2
[6] -> 3
resulting graph:
[0] -> 4
[1] -> 6 -> 2
[2] -> 5 -> 3 -> 1
[3] -> 6 -> 2
[4] -> 6 -> 5 -> 0
[5] -> 6 -> 4 -> 2
[6] -> 5 -> 4 -> 3 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 78: 

graph:
[0] -> 6 -> 4
[1] -> 5 -> 4 -> 2
[2] -> 1
[3] -> 5
[4] -> 5 -> 1 -> 0
[5] -> 4 -> 3 -> 1
[6] -> 0
found odd cycle! : 1, 4, 5, 1, 
contracting cycle...
[0] -> 6 -> 4
[1] -> 5 -> 4 -> 2
[2] -> 1
[3] -> 5
(4) -> [1] -> 5 -> 1 -> 0
(5) -> [1] -> 4 -> 3 -> 1
[6] -> 0
constructed path: 
[0] -> 4
[1] -> 2
[2] -> 1
[3]
[4] -> 0
[5]
[6]
expanding 1 from 1 into -1
expanding 4 from 1 into -1
expanding 5 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6 -> 4
[1] -> 5 -> 4 -> 2
[2] -> 1
[3] -> 5
[4] -> 5 -> 1 -> 0
[5] -> 4 -> 3 -> 1
[6] -> 0
lifted path: 
[0] -> 4
[1] -> 2
[2] -> 1
[3]
[4] -> 0
[5]
[6]
resulting graph:
[0] -> 6 -> 4
[1] -> 5 -> 4 -> 2
[2] -> 1
[3] -> 5
[4] -> 5 -> 1 -> 0
[5] -> 4 -> 3 -> 1
[6] -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 79: 

Run # 80: 

graph:
[0]
[1] -> 5 -> 2
[2] -> 5 -> 1
[3]
[4]
[5] -> 2 -> 1
[6]
found odd cycle! : 2, 1, 5, 2, 
contracting cycle...
[0]
(1) -> [2] -> 5 -> 2
[2] -> 5 -> 1
[3]
[4]
(5) -> [2] -> 2 -> 1
[6]
no path found through odd cycle, restarting...
graph:
[0]
[1] -> 5
[2] -> 6 -> 4 -> 3
[3] -> 6 -> 4 -> 2
[4] -> 3 -> 2
[5] -> 1
[6] -> 3 -> 2
found odd cycle! : 3, 2, 6, 3, 
contracting cycle...
[0]
[1] -> 5
(2) -> [3] -> 6 -> 4 -> 3
[3] -> 6 -> 4 -> 2
[4] -> 3 -> 2
[5] -> 1
(6) -> [3] -> 3 -> 2
no path found through odd cycle, restarting...
graph:
[0] -> 6
[1] -> 6 -> 5 -> 2
[2] -> 3 -> 1
[3] -> 6 -> 2
[4] -> 6
[5] -> 6 -> 1
[6] -> 5 -> 4 -> 3 -> 1 -> 0
found odd cycle! : 1, 6, 5, 1, 
contracting cycle...
[0] -> 6
[1] -> 6 -> 5 -> 2
[2] -> 3 -> 1
[3] -> 6 -> 2
[4] -> 6
(5) -> [1] -> 6 -> 1
(6) -> [1] -> 5 -> 4 -> 3 -> 1 -> 0
constructed path: 
[0]
[1] -> 2
[2] -> 1
[3]
[4] -> 6
[5]
[6] -> 4
expanding 1 from 1 into -1
expanding 5 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6
[1] -> 6 -> 5 -> 2
[2] -> 3 -> 1
[3] -> 6 -> 2
[4] -> 6
[5] -> 6 -> 1
[6] -> 5 -> 4 -> 3 -> 1 -> 0
lifted path: 
[0]
[1] -> 2
[2] -> 1
[3]
[4] -> 6
[5]
[6] -> 4
resulting graph:
[0] -> 6
[1] -> 6 -> 5 -> 2
[2] -> 3 -> 1
[3] -> 6 -> 2
[4] -> 6
[5] -> 6 -> 1
[6] -> 5 -> 4 -> 3 -> 1 -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 81: 

Run # 82: 

Run # 83: 

Run # 84: 

Run # 85: 

Run # 86: 

graph:
[0] -> 4 -> 3
[1] -> 5 -> 4
[2]
[3] -> 0
[4] -> 6 -> 5 -> 1 -> 0
[5] -> 4 -> 1
[6] -> 4
found odd cycle! : 1, 4, 5, 1, 
contracting cycle...
[0] -> 4 -> 3
[1] -> 5 -> 4
[2]
[3] -> 0
(4) -> [1] -> 6 -> 5 -> 1 -> 0
(5) -> [1] -> 4 -> 1
[6] -> 4
constructed path: 
[0] -> 4
[1]
[2]
[3]
[4] -> 0 -> 6
[5]
[6] -> 4
expanding 1 from 1 into -1
expanding 4 from 1 into -1
expanding 5 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 4 -> 3
[1] -> 5 -> 4
[2]
[3] -> 0
[4] -> 6 -> 5 -> 1 -> 0
[5] -> 4 -> 1
[6] -> 4
lifted path: 
[0] -> 4
[1]
[2]
[3]
[4] -> 0 -> 6
[5]
[6] -> 4
resulting graph:
[0] -> 4 -> 3
[1] -> 5 -> 4
[2]
[3] -> 0
[4] -> 6 -> 5 -> 1 -> 0
[5] -> 4 -> 1
[6] -> 4
GRAPH STATE (SHOULD BE 0): 0
Run # 87: 

graph:
[0] -> 6 -> 5
[1] -> 4
[2] -> 6
[3] -> 6 -> 4
[4] -> 6 -> 3 -> 1
[5] -> 0
[6] -> 4 -> 3 -> 2 -> 0
found odd cycle! : 3, 6, 4, 3, 
contracting cycle...
[0] -> 6 -> 5
[1] -> 4
[2] -> 6
[3] -> 6 -> 4
(4) -> [3] -> 6 -> 3 -> 1
[5] -> 0
(6) -> [3] -> 4 -> 3 -> 2 -> 0
constructed path: 
[0]
[1] -> 4
[2] -> 6
[3]
[4] -> 1
[5]
[6] -> 2
expanding 3 from 3 into -1
expanding 4 from 3 into -1
expanding 6 from 3 into -1
FINISHED EXPANDING GRAPH:
[0] -> 6 -> 5
[1] -> 4
[2] -> 6
[3] -> 6 -> 4
[4] -> 6 -> 3 -> 1
[5] -> 0
[6] -> 4 -> 3 -> 2 -> 0
lifted path: 
[0]
[1] -> 4
[2] -> 6
[3]
[4] -> 1
[5]
[6] -> 2
resulting graph:
[0] -> 6 -> 5
[1] -> 4
[2] -> 6
[3] -> 6 -> 4
[4] -> 6 -> 3 -> 1
[5] -> 0
[6] -> 4 -> 3 -> 2 -> 0
GRAPH STATE (SHOULD BE 0): 0
Run # 88: 

Run # 89: 

graph:
[0] -> 4
[1] -> 5 -> 3
[2]
[3] -> 5 -> 1
[4] -> 5 -> 0
[5] -> 4 -> 3 -> 1
[6]
found odd cycle! : 1, 5, 3, 1, 
contracting cycle...
[0] -> 4
[1] -> 5 -> 3
[2]
(3) -> [1] -> 5 -> 1
[4] -> 5 -> 0
(5) -> [1] -> 4 -> 3 -> 1
[6]
no path found through odd cycle, restarting...
graph:
[0]
[1] -> 2
[2] -> 5 -> 4 -> 1
[3] -> 5
[4] -> 5 -> 2
[5] -> 6 -> 4 -> 3 -> 2
[6] -> 5
found odd cycle! : 4, 2, 5, 4, 
contracting cycle...
[0]
[1] -> 2
(2) -> [4] -> 5 -> 4 -> 1
[3] -> 5
[4] -> 5 -> 2
(5) -> [4] -> 6 -> 4 -> 3 -> 2
[6] -> 5
constructed path: 
[0]
[1]
[2]
[3] -> 5
[4]
[5] -> 3 -> 6
[6] -> 5
expanding 2 from 4 into -1
expanding 4 from 4 into -1
expanding 5 from 4 into -1
FINISHED EXPANDING GRAPH:
[0]
[1] -> 2
[2] -> 5 -> 4 -> 1
[3] -> 5
[4] -> 5 -> 2
[5] -> 6 -> 4 -> 3 -> 2
[6] -> 5
lifted path: 
[0]
[1]
[2]
[3] -> 5
[4]
[5] -> 3 -> 6
[6] -> 5
resulting graph:
[0]
[1] -> 2
[2] -> 5 -> 4 -> 1
[3] -> 5
[4] -> 5 -> 2
[5] -> 6 -> 4 -> 3 -> 2
[6] -> 5
GRAPH STATE (SHOULD BE 0): 0
Run # 90: 

graph:
[0] -> 5 -> 4
[1] -> 5 -> 2
[2] -> 6 -> 3 -> 1
[3] -> 6 -> 2
[4] -> 5 -> 0
[5] -> 4 -> 1 -> 0
[6] -> 3 -> 2
found odd cycle! : 3, 2, 6, 3, 
contracting cycle...
[0] -> 5 -> 4
[1] -> 5 -> 2
(2) -> [3] -> 6 -> 3 -> 1
[3] -> 6 -> 2
[4] -> 5 -> 0
[5] -> 4 -> 1 -> 0
(6) -> [3] -> 3 -> 2
no path found through odd cycle, restarting...
graph:
[0] -> 5
[1] -> 6 -> 4 -> 2
[2] -> 6 -> 5 -> 1
[3]
[4] -> 1
[5] -> 2 -> 0
[6] -> 2 -> 1
found odd cycle! : 1, 2, 6, 1, 
contracting cycle...
[0] -> 5
[1] -> 6 -> 4 -> 2
(2) -> [1] -> 6 -> 5 -> 1
[3]
[4] -> 1
[5] -> 2 -> 0
(6) -> [1] -> 2 -> 1
constructed path: 
[0]
[1] -> 4
[2] -> 5
[3]
[4] -> 1
[5] -> 2
[6]
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5
[1] -> 6 -> 4 -> 2
[2] -> 6 -> 5 -> 1
[3]
[4] -> 1
[5] -> 2 -> 0
[6] -> 2 -> 1
lifted path: 
[0]
[1] -> 4
[2] -> 5
[3]
[4] -> 1
[5] -> 2
[6]
resulting graph:
[0] -> 5
[1] -> 6 -> 4 -> 2
[2] -> 6 -> 5 -> 1
[3]
[4] -> 1
[5] -> 2 -> 0
[6] -> 2 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 91: 

graph:
[0]
[1] -> 3
[2] -> 6 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 5 -> 3
[5] -> 4
[6] -> 3 -> 2
found odd cycle! : 2, 3, 6, 2, 
contracting cycle...
[0]
[1] -> 3
[2] -> 6 -> 3
(3) -> [2] -> 6 -> 4 -> 2 -> 1
[4] -> 5 -> 3
[5] -> 4
(6) -> [2] -> 3 -> 2
constructed path: 
[0]
[1] -> 3
[2]
[3] -> 1 -> 4
[4] -> 3
[5]
[6]
expanding 2 from 2 into -1
expanding 3 from 2 into -1
expanding 6 from 2 into -1
FINISHED EXPANDING GRAPH:
[0]
[1] -> 3
[2] -> 6 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 5 -> 3
[5] -> 4
[6] -> 3 -> 2
lifted path: 
[0]
[1] -> 3
[2]
[3] -> 1 -> 4
[4] -> 3
[5]
[6]
resulting graph:
[0]
[1] -> 3
[2] -> 6 -> 3
[3] -> 6 -> 4 -> 2 -> 1
[4] -> 5 -> 3
[5] -> 4
[6] -> 3 -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 92: 

Run # 93: 

graph:
[0] -> 6 -> 3
[1] -> 4 -> 2
[2] -> 1
[3] -> 6 -> 4 -> 0
[4] -> 5 -> 3 -> 1
[5] -> 4
[6] -> 3 -> 0
found odd cycle! : 0, 6, 3, 0, 
contracting cycle...
[0] -> 6 -> 3
[1] -> 4 -> 2
[2] -> 1
(3) -> [0] -> 6 -> 4 -> 0
[4] -> 5 -> 3 -> 1
[5] -> 4
(6) -> [0] -> 3 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 3
[1] -> 5 -> 4 -> 2
[2] -> 5 -> 1
[3] -> 5 -> 0
[4] -> 1
[5] -> 3 -> 2 -> 1
[6]
found odd cycle! : 1, 5, 2, 1, 
contracting cycle...
[0] -> 3
[1] -> 5 -> 4 -> 2
(2) -> [1] -> 5 -> 1
[3] -> 5 -> 0
[4] -> 1
(5) -> [1] -> 3 -> 2 -> 1
[6]
constructed path: 
[0]
[1] -> 4
[2]
[3] -> 5
[4] -> 1
[5] -> 3
[6]
expanding 1 from 1 into -1
expanding 2 from 1 into -1
expanding 5 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 3
[1] -> 5 -> 4 -> 2
[2] -> 5 -> 1
[3] -> 5 -> 0
[4] -> 1
[5] -> 3 -> 2 -> 1
[6]
lifted path: 
[0]
[1] -> 4
[2]
[3] -> 5
[4] -> 1
[5] -> 3
[6]
resulting graph:
[0] -> 3
[1] -> 5 -> 4 -> 2
[2] -> 5 -> 1
[3] -> 5 -> 0
[4] -> 1
[5] -> 3 -> 2 -> 1
[6]
GRAPH STATE (SHOULD BE 0): 0
Run # 94: 

Run # 95: 

graph:
[0] -> 5 -> 3
[1] -> 4
[2]
[3] -> 6 -> 5 -> 0
[4] -> 6 -> 1
[5] -> 3 -> 0
[6] -> 4 -> 3
found odd cycle! : 0, 5, 3, 0, 
contracting cycle...
[0] -> 5 -> 3
[1] -> 4
[2]
(3) -> [0] -> 6 -> 5 -> 0
[4] -> 6 -> 1
(5) -> [0] -> 3 -> 0
[6] -> 4 -> 3
no path found through odd cycle, restarting...
graph:
[0] -> 5 -> 4 -> 3 -> 2
[1] -> 6 -> 3 -> 2
[2] -> 5 -> 4 -> 1 -> 0
[3] -> 6 -> 5 -> 1 -> 0
[4] -> 2 -> 0
[5] -> 3 -> 2 -> 0
[6] -> 3 -> 1
found odd cycle! : 1, 3, 6, 1, 
contracting cycle...
[0] -> 5 -> 4 -> 3 -> 2
[1] -> 6 -> 3 -> 2
[2] -> 5 -> 4 -> 1 -> 0
(3) -> [1] -> 6 -> 5 -> 1 -> 0
[4] -> 2 -> 0
[5] -> 3 -> 2 -> 0
(6) -> [1] -> 3 -> 1
constructed path: 
[0]
[1] -> 2
[2] -> 1
[3] -> 5
[4]
[5] -> 3
[6]
expanding 1 from 1 into -1
expanding 3 from 1 into -1
expanding 6 from 1 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5 -> 4 -> 3 -> 2
[1] -> 6 -> 3 -> 2
[2] -> 5 -> 4 -> 1 -> 0
[3] -> 6 -> 5 -> 1 -> 0
[4] -> 2 -> 0
[5] -> 3 -> 2 -> 0
[6] -> 3 -> 1
lifted path: 
[0]
[1] -> 2
[2] -> 1
[3] -> 5
[4]
[5] -> 3
[6]
resulting graph:
[0] -> 5 -> 4 -> 3 -> 2
[1] -> 6 -> 3 -> 2
[2] -> 5 -> 4 -> 1 -> 0
[3] -> 6 -> 5 -> 1 -> 0
[4] -> 2 -> 0
[5] -> 3 -> 2 -> 0
[6] -> 3 -> 1
GRAPH STATE (SHOULD BE 0): 0
Run # 96: 

graph:
[0] -> 6 -> 5
[1]
[2]
[3]
[4]
[5] -> 6 -> 0
[6] -> 5 -> 0
found odd cycle! : 0, 6, 5, 0, 
contracting cycle...
[0] -> 6 -> 5
[1]
[2]
[3]
[4]
(5) -> [0] -> 6 -> 0
(6) -> [0] -> 5 -> 0
no path found through odd cycle, restarting...
graph:
[0] -> 5 -> 4 -> 1
[1] -> 0
[2] -> 6 -> 3
[3] -> 6 -> 5 -> 4 -> 2
[4] -> 5 -> 3 -> 0
[5] -> 4 -> 3 -> 0
[6] -> 3 -> 2
found odd cycle! : 2, 3, 6, 2, 
contracting cycle...
[0] -> 5 -> 4 -> 1
[1] -> 0
[2] -> 6 -> 3
(3) -> [2] -> 6 -> 5 -> 4 -> 2
[4] -> 5 -> 3 -> 0
[5] -> 4 -> 3 -> 0
(6) -> [2] -> 3 -> 2
constructed path: 
[0]
[1]
[2]
[3] -> 4 -> 5
[4] -> 3
[5] -> 3
[6]
expanding 2 from 2 into -1
expanding 3 from 2 into -1
expanding 6 from 2 into -1
FINISHED EXPANDING GRAPH:
[0] -> 5 -> 4 -> 1
[1] -> 0
[2] -> 6 -> 3
[3] -> 6 -> 5 -> 4 -> 2
[4] -> 5 -> 3 -> 0
[5] -> 4 -> 3 -> 0
[6] -> 3 -> 2
lifted path: 
[0]
[1]
[2]
[3] -> 4 -> 5
[4] -> 3
[5] -> 3
[6]
resulting graph:
[0] -> 5 -> 4 -> 1
[1] -> 0
[2] -> 6 -> 3
[3] -> 6 -> 5 -> 4 -> 2
[4] -> 5 -> 3 -> 0
[5] -> 4 -> 3 -> 0
[6] -> 3 -> 2
GRAPH STATE (SHOULD BE 0): 0
Run # 97: 

Run # 98: 

Run # 99: 

Run # 100: 

